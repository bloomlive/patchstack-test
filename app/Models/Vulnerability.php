<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * @property int $id
 */
class Vulnerability extends Model
{
    use HasFactory;
    use SoftDeletes;

    protected $fillable = [
        'title',
        'excerpt',
        'description',
    ];

    protected $casts = [
        'title'       => 'string',
        'excerpt'     => 'string',
        'description' => 'string'
    ];

    public function vulnerabilityFactors(): HasMany
    {
        return $this->hasMany(VulnerabilityFactor::class);
    }

    public function descriptionParsed(): Attribute
    {
        return new Attribute(
            get: fn () => self::wrapInPTag($this->description)
        );
    }

    public static function wrapInPTag(string $string)
    {
        $filter = function ($tag) {
            return '<p>'.$tag.'</p>';
        };

        return implode('', array_map($filter, explode(PHP_EOL, $string)));
    }
}
